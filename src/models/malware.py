from typing import Optional, List
from datetime import datetime
from .base import BaseModel

class Malware(BaseModel):
    def __init__(
        self,
        stix_id: str,
        name: str,
        description: Optional[str] = None,
        malware_type: Optional[List[str]] = None,
        is_family: bool = False,
        first_seen: Optional[datetime] = None,
        last_seen: Optional[datetime] = None
    ):
        super().__init__(stix_id, name, description)
        self.malware_type = malware_type or []
        self.is_family = is_family
        self.first_seen = first_seen
        self.last_seen = last_seen

    def to_dict(self) -> dict:
        base_dict = super().to_dict()
        base_dict.update({
            'malware_type': self.malware_type,
            'is_family': self.is_family,
            'first_seen': self.first_seen,
            'last_seen': self.last_seen
        })
        return base_dict